<!--
  Copyright 2015 Martin Garcia Carmueja 
  
   This file is part of the Myoelectric Personal Training and Control Environment (MPTCE).
 
   MPTCE is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.
 
   MPTCE is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
 
   You should have received a copy of the GNU General Public License
   along with MPTCE.  If not, see <http://www.gnu.org/licenses/>.
-->

<Window 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:viewmodel="clr-namespace:MPTCE.ViewModel"
        xmlns:converters="clr-namespace:MPTCE.Converters"
        xmlns:RecordingPlan="clr-namespace:RecordingPlan;assembly=RecordingPlan"
        xmlns:gif="http://wpfanimatedgif.codeplex.com"
        x:Class="MPTCE.MainWindow"
        Title="Myoelectric Personal Training and Control Environment" Height="768" Width="1152">


    <Window.Resources>
        <converters:MovCodeToStringConverter x:Key="converter" />
    </Window.Resources>


    <Grid Background="AliceBlue">

        <TabControl Margin="0">
            <TabItem x:Name="acqTabItem" Header="Acquisition" IsEnabled="{Binding tabActive}">


                <TabItem.DataContext>
                    <viewmodel:AcqViewModel x:Name="acqViewModel"/>
                </TabItem.DataContext>

                <Grid Name="acqBackgroundGrid" Background="LightGray">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.2*"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="0.8*"/>
                    </Grid.ColumnDefinitions>
                    <DockPanel Background="#FFDADADA" Grid.Column="0">

                        <GroupBox DockPanel.Dock="Top" Header="Movements" Margin="5,5,5,5" VerticalAlignment="Top" Height="200" IsEnabled="{Binding notRecording, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">

                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0.72*"/>
                                    <RowDefinition Height="0.28*"/>
                                </Grid.RowDefinitions>

                                <ListBox Grid.Row="0" x:Name="acqMovementsListBox" HorizontalAlignment="Stretch" Margin="0,2,0,0" ItemsSource="{Binding movements}" SelectionMode="Multiple" SelectionChanged="acqMovementsListBox_SelectionChanged">

                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Margin="0,2">
                                                <TextBlock Text="{Binding name}" />
                                            </Grid>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>

                                <UniformGrid Grid.Row="1" Columns="1">
                                    <Label Content="Simultaneous movements:" Margin="0,0,0,0" VerticalAlignment="Bottom"/>
                                    <UniformGrid Columns="3">
                                        <RadioButton x:Name="acq1RadioButton" Content="1" HorizontalAlignment="Center" Margin="0,0,0,0" VerticalAlignment="Top" IsChecked="{Binding movement1, Mode = TwoWay, UpdateSourceTrigger=PropertyChanged}" GroupName="simultaneity"/>
                                        <RadioButton x:Name="acq2RadioButton" Content="2" HorizontalAlignment="Center" Margin="0,0,0,0" VerticalAlignment="Top" IsChecked="{Binding movement2, Mode = TwoWay, UpdateSourceTrigger=PropertyChanged}" GroupName="simultaneity"/>
                                        <RadioButton x:Name="acq3RadioButton" Content="3" HorizontalAlignment="Center" Margin="0,0,0,0" VerticalAlignment="Top" IsChecked="{Binding movement3, Mode = TwoWay, UpdateSourceTrigger=PropertyChanged}" GroupName="simultaneity"/>
                                    </UniformGrid>
                                </UniformGrid>

                            </Grid>

                        </GroupBox>

                        <UniformGrid DockPanel.Dock="Top" Height="118" Margin="10,10,10,0" VerticalAlignment="Top" Columns="1">
                            <UniformGrid Columns="1">
                                <UniformGrid Columns="2">
                                    <Button x:Name="acqRecordButton" Content="Record" Margin="2,2,2,2" VerticalAlignment="Center" Click="acqRecordButton_Click"/>
                                    <Button x:Name="acqLoadButton" Content="Load" Margin="2,2,2,2" VerticalAlignment="Center" Click="acqLoadButton_Click"/>
                                </UniformGrid>

                                <CheckBox x:Name="acqThreshCheckBox" Content="Detect thresholds" Margin="2,2,2,2" VerticalAlignment="Top" IsChecked="{Binding detectThresholds, Mode = TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding notRecording, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </UniformGrid>
                            <UniformGrid Columns="1" IsEnabled="{Binding notRecording, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                <Label Content="Data capture device:" Margin="0,0,0,0" VerticalAlignment="Bottom" HorizontalAlignment="Left"/>
                                <ComboBox x:Name="acqDeviceComboBox" Margin="0,0,0,0" VerticalAlignment="Top" ItemsSource="{Binding devices}" SelectedItem="{Binding selectedDevice, Mode = TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Margin="0,2">
                                                <TextBlock Text="{Binding}" />
                                            </Grid>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>

                            </UniformGrid>
                        </UniformGrid>
                        
                        
                        <RecordingPlan:RecordingPlan  DockPanel.Dock="Bottom" x:Name="recordingPlan" Margin="5"/>

                    </DockPanel>


                    <GridSplitter Grid.Column="1" 
                                  Grid.RowSpan="3" 
                                  HorizontalAlignment="Center" 
                                  VerticalAlignment="Stretch"
                                  Background="LightGray" 
                                  BorderBrush="White"
                                  BorderThickness="1"
                                  ShowsPreview="true"
                                  Width="5"/>


                    <Grid x:Name="acqDisplayGrid" Grid.Column="2" Width="Auto" Margin="0">
                        <UniformGrid x:Name="acqGraphsGrid" Margin="0" Width="Auto" Background="LightGray" Columns="1" >

                        </UniformGrid>
                    </Grid>





                </Grid>

            </TabItem>
            <TabItem x:Name="trtTabItem" Header="Treatment" IsEnabled="{Binding tabActive}">

                <TabItem.DataContext>
                    <viewmodel:TrtViewModel x:Name="trtViewModel"/>
                </TabItem.DataContext>


                <Grid Background="LightGray">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.2*"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="0.8*"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Background="#FFDADADA" Grid.Column="0">

                        <GroupBox Header="Sets per movement:" Margin="5,5" VerticalAlignment="Top" Height="Auto" IsEnabled="{Binding notRunning}">
                            
                            <Grid Margin="5,1,5,1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                              <!--  <Label Grid.Row="0" Content="Amount" HorizontalAlignment="Right" VerticalAlignment="Top"/> -->

                                <Grid Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="0.7*"/>
                                        <ColumnDefinition Width="0.3*"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <Label Grid.Row="0" Grid.Column="0" Content="Training set size" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                    <TextBox Grid.Row="0" Grid.Column="1" x:Name="trtTrainingTextBox" TextWrapping="NoWrap" Text="{Binding trainingSetSize, Mode = TwoWay, UpdateSourceTrigger=LostFocus}" VerticalAlignment="Center" MaxLines="1" TextAlignment="Right" HorizontalAlignment="Stretch"/>

                                    <Label Grid.Row="1" Grid.Column="0" Content="Validation set size" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                    <TextBox Grid.Row="1" Grid.Column="1" x:Name="trtValidationTextBox" TextWrapping="NoWrap" Text="{Binding validationSetSize, Mode = TwoWay, UpdateSourceTrigger=LostFocus}" VerticalAlignment="Center" MaxLines="1" TextAlignment="Right" HorizontalAlignment="Stretch"/>
                                
                                </Grid>

                                <UniformGrid Columns="2" Grid.Row="2">
                                    <Label Content="Total" HorizontalAlignment="Left" FontWeight="Bold" VerticalAlignment="Bottom" />
                                    <Label x:Name="trtTotalLabel" Content="{Binding totalSetSize , Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Right" BorderThickness="1" FontWeight="Bold" VerticalAlignment="Bottom"/>
                                </UniformGrid>

                                <CheckBox Grid.Row="3" Margin="0,5" x:Name="trtRandomWindowSelection" Content="Random window selection" IsChecked="{Binding randomWindowSelection, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Center"/>

                            </Grid>
                        </GroupBox>

                        <GroupBox Header="Features to extract" VerticalAlignment="Top" Height="Auto" MaxHeight="200" Margin="5,5" IsEnabled="{Binding notRunning}">
                            <Grid>
                                <ListBox x:Name="trtFeaturesListBox" Margin="2" ItemsSource="{Binding features}" SelectionMode="Multiple" SelectionChanged="trtFeaturesListBox_SelectionChanged">

                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Margin="0,2">
                                                <TextBlock Text="{Binding}" />
                                            </Grid>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>

                                </ListBox>
                            </Grid>
                        </GroupBox>

                        <CheckBox x:Name="trtIncludeRests" Content="Include rests"  IsChecked="{Binding includeRests, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,5" HorizontalAlignment="Left" VerticalAlignment="Bottom" IsEnabled="{Binding notRunning}"/>

                        <UniformGrid Margin="5,5" Rows="1" IsEnabled="{Binding notRunning}">
                            <Button x:Name="trtTreatButton" Content="Treat" Margin="2" Click="trtTreatButton_Click"/>
                            <!--<Button x:Name="trtLoadButton" Content="Load" Margin="2" Click="trtLoadButton_Click"/>-->
                        </UniformGrid>

                        <Image gif:ImageBehavior.AnimatedSource="Resources/bubbleLoader.gif" Stretch="None" Visibility="{Binding busyIndicatorVisible}" />
                        <Image Source="Resources/checkmark.png" Stretch="None" Visibility="{Binding okIndicatorVisible}"/>
                        
                    </StackPanel>

                    <Grid x:Name="trtDisplayGrid" Grid.Column="2" Margin="10">

                    </Grid>


                    <GridSplitter Grid.Column="1" 
                                  Grid.RowSpan="3" 
                                  HorizontalAlignment="Center" 
                                  VerticalAlignment="Stretch"
                                  Background="LightGray" 
                                  BorderBrush="White"
                                  BorderThickness="1"
                                  ShowsPreview="true"
                                  Width="5"/>

                </Grid>
            </TabItem>
            <TabItem x:Name="traTabItem" Header="Training" IsEnabled="{Binding tabActive}">

                <TabItem.DataContext>
                    <viewmodel:TraViewModel x:Name="traViewModel"/>
                </TabItem.DataContext>

                <Grid Background="LightGray">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.2*"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="0.8*"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Background="#FFDADADA" Grid.Column="0">

                        <GroupBox Header="Training method" VerticalAlignment="Top" Margin="5,0" IsEnabled="{Binding notTraining, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                            <Grid Margin="5,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <UniformGrid Columns="1" Grid.Row="0">
                                    <Label Content="Pattern recognizer" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                                    <ComboBox x:Name="traPatRecComboBox" VerticalAlignment="Top" ItemsSource="{Binding supportedPatternRecognizers}" SelectedItem="{Binding selectedPatternRecognizer, Mode = TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </UniformGrid>

                                <UniformGrid Columns="1"  Grid.Row="1">
                                    <Label Content="Activation function" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                                    <ComboBox x:Name="traActivationComboBox" VerticalAlignment="Top" ItemsSource="{Binding supportedActivationFunctions}" SelectedItem="{Binding selectedActivationFunction, Mode = TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </UniformGrid>

                                <Grid  Grid.Row="2" IsEnabled="{Binding activationFunctionValid, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <Label Grid.Row="0" Grid.Column="0" Content="Activation level" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                    <TextBox Grid.Row="0" Grid.Column="1" x:Name="traActivationLevelTextBox" TextWrapping="NoWrap" 
                                             Text="{Binding activationLevel, Mode = TwoWay, UpdateSourceTrigger=LostFocus}" VerticalAlignment="Center" MaxLines="1" TextAlignment="Right" HorizontalAlignment="Stretch"
                                             
                                             />

                                    <Label Grid.Row="1" Grid.Column="0" Content="Activation tolerance" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                    <TextBox Grid.Row="1" Grid.Column="1" x:Name="traActivationToleranceTextBox" TextWrapping="NoWrap" 
                                             Text="{Binding activationTolerance, Mode = TwoWay, UpdateSourceTrigger=LostFocus}" VerticalAlignment="Center" MaxLines="1" TextAlignment="Right" HorizontalAlignment="Stretch"
                                             />

                                </Grid>


                                <!--CheckBox x:Name="traExplicitCheckBox"  Margin="0,5" Grid.Row="3" Content="Use explicit movement codes" HorizontalAlignment="Left" VerticalAlignment="Center" IsChecked="{Binding explicitMovements, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding multipleActivationSupport, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/-->

                            </Grid>
                        </GroupBox>
                        <GroupBox Header="Training set" VerticalAlignment="Top" Margin="5,0" IsEnabled="{Binding notTraining, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                            <Grid Margin="5,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0.85*"/>
                                    <RowDefinition Height="0.15*"/>
                                </Grid.RowDefinitions>

                                <Grid Margin="0" Grid.Row="0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="0.1*"/>
                                        <RowDefinition Height="0.9*"/>
                                    </Grid.RowDefinitions>
                                    <Label Grid.Row="0" Content="Set selection" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                                    <ListBox Grid.Row="1" x:Name="traSelectionListBox" VerticalAlignment="Top" Height="Auto" MaxHeight="300" ItemsSource="{Binding trainingSets, UpdateSourceTrigger=PropertyChanged}" SelectionMode="Multiple" SelectionChanged="traSelectionListBox_SelectionChanged" Margin="1,0,-1,0">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Grid Margin="0,2">
                                                    <TextBlock Text="{Binding movementCode, Converter={StaticResource converter}}" />
                                                </Grid>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>

                                </Grid>
                                <Grid Margin="0" Grid.Row="1">
                                    <UniformGrid Columns="1">
                                        <Label Content="Normalization" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                                        <ComboBox x:Name="traNormalizComboBox" VerticalAlignment="Top" ItemsSource="{Binding supportedNormalizers}" SelectedItem="{Binding selectedNormalizer, Mode = TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                       <!-- <CheckBox x:Name="traRandomizCheckBox" Margin="0,5" Content="Randomize sets" HorizontalAlignment="Left" VerticalAlignment="Bottom" IsChecked="{Binding randomizeSets, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>-->
                                    </UniformGrid>
                                </Grid>
                            </Grid>
                        </GroupBox>


                        <UniformGrid Margin="5" Rows="1" VerticalAlignment="Top">
                            <Button x:Name="traTrainButton" Margin="2" Content="Train" VerticalAlignment="Top" Click="traTrainButton_Click"/>
                            <!-- <Button x:Name="traLoadButton" Margin="2" Content="Load file" VerticalAlignment="Top" Click="traLoadButton_Click"/>-->
                        </UniformGrid>


                    </StackPanel>

                    <Grid x:Name="traDisplayGrid" Grid.Column="2" Margin="2">
                        <ListView x:Name="trtListView" ItemsSource="{Binding logItems, UpdateSourceTrigger=PropertyChanged}">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Width="Auto" Header="Message" DisplayMemberBinding="{Binding message}"/>
                                    <!-- <GridViewColumn Width="Auto" Header="Column 2" /> -->
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </Grid>

                    <GridSplitter Grid.Column="1" 
                                  Grid.RowSpan="3" 
                                  HorizontalAlignment="Center" 
                                  VerticalAlignment="Stretch"
                                  Background="LightGray"
                                  BorderBrush="White"
                                  BorderThickness="1"
                                  ShowsPreview="true"
                                  Width="5"/>
                </Grid>
            </TabItem>

            <TabItem x:Name="reaTabItem" Header="Real time">

                <TabItem.DataContext>
                    <viewmodel:ReaViewModel x:Name="reaViewModel"/>
                </TabItem.DataContext>

                <Grid Background="LightGray" Margin="2">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <!-- Check if this Auto could cause a problem!! -->
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="0.6*"/>
                    </Grid.ColumnDefinitions>

                    <Grid Background="#FFE5E5E5" Margin="2">

                        <WrapPanel Name ="reaWrapPanel" Background="#FFDADADA" Margin="1" Grid.Column="0" Orientation="Vertical" HorizontalAlignment="Stretch">

                            <GroupBox Header="General Settings" VerticalAlignment="Top"  Margin="5,0">

                                <UniformGrid Columns="1" Margin="0">

                                    <Label Content="Data capture device:" Margin="0,0,0,0" VerticalAlignment="Bottom" HorizontalAlignment="Left"/>

                                    <ComboBox x:Name="reaDeviceComboBox" Margin="0,0,0,0" VerticalAlignment="Top" ItemsSource="{Binding devices}" SelectedItem="{Binding selectedDevice, Mode = TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding isNotRunning, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <Grid Margin="0,2">
                                                    <TextBlock Text="{Binding}" />
                                                </Grid>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>

                                    <CheckBox x:Name="reaLevelControlled" Content="Threshold-based detection"  IsChecked="{Binding levelControlled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center" IsEnabled="{Binding thresholdSelectable, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>

                                    <Button Name="reaStartButton" MinHeight="30" Content="Start" VerticalAlignment="Top" Click="reaStartButton_Click" IsEnabled="{Binding readyToRun, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>


                                </UniformGrid>
                            </GroupBox>

                            <GroupBox Header="Pattern recognition controls" VerticalAlignment="Top"  Margin="5,0" IsEnabled="{Binding prControlled, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                <UniformGrid Columns="1" Margin="0">

                                    <Label Content="Method:" Margin="0,0,0,0" VerticalAlignment="Bottom" HorizontalAlignment="Left"/>

                                    <ComboBox x:Name="reaPatternRecognizerComboBox" Margin="0,0,0,0" VerticalAlignment="Top" ItemsSource="{Binding patternRecognizers, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding selectedPatternRecognizer, Mode = TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <Grid Margin="0,2">
                                                    <TextBlock Text="{Binding}" />
                                                </Grid>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>

                                    <CheckBox x:Name="reaMultipleActivation" Content="Detect simultaneous movements"  IsChecked="{Binding multipleActivation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center" IsEnabled="{Binding multipleActivationSupported, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>

                                </UniformGrid>
                            </GroupBox>
                            
                            <GroupBox Header="Threshold Controls" VerticalAlignment="Top"  Margin="5,0" IsEnabled="{Binding thresholdConfigExists, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                <UniformGrid Columns="1" Margin="1">


                                    <DataGrid Name="reaThreshDataGrid" AutoGenerateColumns="False" ItemsSource="{Binding thresholdControls, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}">
                                        <DataGrid.Columns>

                                            <DataGridTextColumn  Header="Ch#" Binding="{Binding channel, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>

                                            <DataGridTemplateColumn Header="Threshold">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition/>
                                                            </Grid.ColumnDefinitions>

                                                            <Slider Grid.Column="0"
                                                                    HorizontalAlignment="Stretch"
                                                                    Value="{Binding threshold, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                                    Minimum="{Binding thresholdMin, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"  
                                                                    Maximum="{Binding thresholdMax, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>

                                                        </Grid>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>


                                            <DataGridComboBoxColumn x:Name="reaComboBoxColumn"
                                                                    Header="Movement"  
                                                                    DisplayMemberPath="name"
                                                                    SelectedValuePath="idTag"
                                                                    SelectedValueBinding="{Binding selectedMovement, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                        </DataGrid.Columns>

                                    </DataGrid>

                                </UniformGrid>
                            </GroupBox>


                        </WrapPanel>
                    </Grid>

                    <Grid Grid.Column="2" Margin="1" Background="LightGray">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.3*" MinHeight="160"/>
                            <RowDefinition Height="5"/>
                            <RowDefinition Height="0.7*" MinHeight="320"/>
                        </Grid.RowDefinitions>

                        <Grid>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.9*"/>
                                <RowDefinition Height="0.1*" MinHeight="30" MaxHeight="30"/>
                            </Grid.RowDefinitions>

                            <Grid Name="reaMovDisplayGrid">

                            </Grid>
                            <!--
                            <UniformGrid Rows="1" Columns="2">
                                <Image x:Name="reaMovImage" HorizontalAlignment="Left" Margin="5" Width="120" Height="120" />
                                <Label x:Name="reaMovName" Content="No movement" FontSize="32" Margin="5" HorizontalAlignment="Right"/>
                            </UniformGrid>
-->
                            <UniformGrid Grid.Row="1" Rows="1" Margin="0" Background="Pink">
                                <CheckBox x:Name="reaPlotGraphs" Content="Show real-time data"  IsChecked="{Binding plotGraphs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Stretch"/>
                            </UniformGrid>

                        </Grid>


                        <GridSplitter Grid.Row="1" 
                                  Grid.ColumnSpan="1" 
                                  HorizontalAlignment="Stretch" 
                                  Background="LightGray"
                                  BorderBrush="White"
                                  BorderThickness="1"    
                                  ShowsPreview="true"/>


                        <Grid x:Name="reaDisplayGrid" Grid.Row="2" Margin="2">
                            <UniformGrid x:Name="reaGraphsGrid" Margin="0" Width="Auto" Background="LightGray" Columns="2">

                            </UniformGrid>
                        </Grid>


                    </Grid>

                    <GridSplitter Grid.Column="1" 
                                  Grid.RowSpan="3" 
                                  HorizontalAlignment="Center" 
                                  VerticalAlignment="Stretch"
                                  Background="LightGray" 
                                  BorderBrush="White"
                                  BorderThickness="1"
                                  ShowsPreview="true"
                                  Width="5"/>


                </Grid>
            </TabItem>

        </TabControl>




    </Grid>
</Window>
